{
  "stats": {
    "suites": 6,
    "tests": 15,
    "passes": 15,
    "pending": 0,
    "failures": 0,
    "start": "2023-02-24T09:37:53.458Z",
    "end": "2023-02-24T09:38:04.012Z",
    "duration": 10554,
    "testsRegistered": 15,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "cf8cf68d-6aa0-4c5c-a26b-39a53e748478",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5574f93b-c11c-4441-b4e1-2648b6d9cfc1",
          "title": "Users API",
          "fullFile": "/media/aditya/Personal Files/Newton/node_ecommerce-app/node_ecommerce-app/__tests__/test.js",
          "file": "/__tests__/test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Users API\"",
              "fullTitle": "Users API \"before all\" hook in \"Users API\"",
              "timedOut": false,
              "duration": 4974,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await mongoose.connect(process.env.DATABASE_URL || \"mongodb://localhost:27017/ecommerce\", { useNewUrlParser: true, useUnifiedTopology: true });\nconsole.log('connected to DB');\nawait seedWithDummyData();",
              "err": {},
              "uuid": "506d5fc0-0105-45e0-9d76-268a8e2554b3",
              "parentUUID": "5574f93b-c11c-4441-b4e1-2648b6d9cfc1",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Users API\"",
              "fullTitle": "Users API \"after all\" hook in \"Users API\"",
              "timedOut": false,
              "duration": 29,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await mongoose.disconnect();\nconsole.log('disconnected DB')",
              "err": {},
              "uuid": "4252cad5-e880-434a-b836-6dd19936b227",
              "parentUUID": "5574f93b-c11c-4441-b4e1-2648b6d9cfc1",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "b5db306c-edba-4b53-baec-a36b8d1c206c",
              "title": "GET /api/v1/products",
              "fullFile": "/media/aditya/Personal Files/Newton/node_ecommerce-app/node_ecommerce-app/__tests__/test.js",
              "file": "/__tests__/test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return all products [user]",
                  "fullTitle": "Users API GET /api/v1/products should return all products [user]",
                  "timedOut": false,
                  "duration": 663,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(app)\n    .get('/api/v1/products')\n    .send({ role: 'user' })\n    .end((err, res) => {\n        expect(err).to.be.null;\n        expect(res.body).to.be.a(\"object\");\n        expect(res.body).to.have.property(\"status\").eql(\"success\");\n        expect(res.body).to.have.property(\"data\");\n        expect(res.body.data.count).eql(20);\n        expect(res.body.data.products[0].price).eql(1599);\n        expect(res.body.data).to.have.property(\"products\").to.be.an(\"array\");\n        expect(res.body.data.products.length).eql(10);\n        done();\n    });",
                  "err": {},
                  "uuid": "e7f6953e-8184-4fc8-b892-9d9b1c43104a",
                  "parentUUID": "b5db306c-edba-4b53-baec-a36b8d1c206c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return all products [guest]",
                  "fullTitle": "Users API GET /api/v1/products should return all products [guest]",
                  "timedOut": false,
                  "duration": 540,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(app)\n    .get('/api/v1/products')\n    .send({ role: 'guest' })\n    .end((err, res) => {\n        expect(err).to.be.null;\n        expect(res.body).to.be.a(\"object\");\n        expect(res.body).to.have.property(\"status\").eql(\"success\");\n        expect(res.body).to.have.property(\"data\");\n        expect(res.body.data.count).eql(20);\n        expect(res.body.data.products.length).eql(10);\n        expect(res.body.data).to.have.property(\"products\").to.be.an(\"array\");\n        done();\n    });",
                  "err": {},
                  "uuid": "024d4472-4f0e-4e7b-9977-2786a7d7da88",
                  "parentUUID": "b5db306c-edba-4b53-baec-a36b8d1c206c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return all products [admin]",
                  "fullTitle": "Users API GET /api/v1/products should return all products [admin]",
                  "timedOut": false,
                  "duration": 549,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(app)\n    .get('/api/v1/products')\n    .send({ role: 'admin' })\n    .end((err, res) => {\n        expect(err).to.be.null;\n        expect(res.body).to.be.a(\"object\");\n        expect(res.body).to.have.property(\"status\").eql(\"success\");\n        expect(res.body).to.have.property(\"data\");\n        expect(res.body.data.count).eql(20);\n        expect(res.body.data.products.length).eql(10);\n        expect(res.body.data).to.have.property(\"products\").to.be.an(\"array\");\n        done();\n    });",
                  "err": {},
                  "uuid": "fd83b320-3242-4b50-8630-6823aa22cf48",
                  "parentUUID": "b5db306c-edba-4b53-baec-a36b8d1c206c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return all products [superadmin]",
                  "fullTitle": "Users API GET /api/v1/products should return all products [superadmin]",
                  "timedOut": false,
                  "duration": 551,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(app)\n    .get('/api/v1/products')\n    .send({ role: 'superadmin' })\n    .end((err, res) => {\n        expect(err).to.be.null;\n        expect(res.body).to.be.a(\"object\");\n        expect(res.body).to.have.property(\"status\").eql(\"success\");\n        expect(res.body).to.have.property(\"data\");\n        expect(res.body.data.count).eql(20);\n        expect(res.body.data.products.length).eql(10);\n        expect(res.body.data).to.have.property(\"products\").to.be.an(\"array\");\n        done();\n    });",
                  "err": {},
                  "uuid": "c92b8b32-aee0-48b1-8e4d-605d08844a82",
                  "parentUUID": "b5db306c-edba-4b53-baec-a36b8d1c206c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return correct products with search queries",
                  "fullTitle": "Users API GET /api/v1/products should return correct products with search queries",
                  "timedOut": false,
                  "duration": 564,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(app)\n    .get('/api/v1/products/?search=Apple&category=Smartphone')\n    .send({ role: 'superadmin' })\n    .end((err, res) => {\n        expect(err).to.be.null;\n        expect(res.body).to.be.a(\"object\");\n        expect(res.body).to.have.property(\"status\").eql(\"success\");\n        expect(res.body).to.have.property(\"data\");\n        expect(res.body.data.count).eql(2);\n        expect(res.body.data.products.length).eql(2);\n        expect(res.body.data.products[0].category).eql(\"Smartphone\");\n        expect(res.body.data).to.have.property(\"products\").to.be.an(\"array\");\n        done();\n    });",
                  "err": {},
                  "uuid": "2c5db1a3-4140-41a7-8dfc-bffb389f1ce0",
                  "parentUUID": "b5db306c-edba-4b53-baec-a36b8d1c206c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return correct products when filtered by price,with pagination",
                  "fullTitle": "Users API GET /api/v1/products should return correct products when filtered by price,with pagination",
                  "timedOut": false,
                  "duration": 559,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(app)\n    .get('/api/v1/products/?limit=8&maxPrice=500&minPrice=200')\n    .send({ role: 'superadmin' })\n    .end((err, res) => {\n        expect(err).to.be.null;\n        expect(res.body).to.be.a(\"object\");\n        expect(res.body).to.have.property(\"status\").eql(\"success\");\n        expect(res.body).to.have.property(\"data\");\n        expect(res.body.data.count).eql(8);\n        expect(res.body.data.products.length).eql(8);\n        expect(res.body.data).to.have.property(\"products\").to.be.an(\"array\");\n        done();\n    });",
                  "err": {},
                  "uuid": "8293f9ba-1647-4df0-b9b4-7e8d8b272409",
                  "parentUUID": "b5db306c-edba-4b53-baec-a36b8d1c206c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e7f6953e-8184-4fc8-b892-9d9b1c43104a",
                "024d4472-4f0e-4e7b-9977-2786a7d7da88",
                "fd83b320-3242-4b50-8630-6823aa22cf48",
                "c92b8b32-aee0-48b1-8e4d-605d08844a82",
                "2c5db1a3-4140-41a7-8dfc-bffb389f1ce0",
                "8293f9ba-1647-4df0-b9b4-7e8d8b272409"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3426,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "94627bda-111c-48b6-9c7b-4373cd5dbd5e",
              "title": "/POST products",
              "fullFile": "/media/aditya/Personal Files/Newton/node_ecommerce-app/node_ecommerce-app/__tests__/test.js",
              "file": "/__tests__/test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should not POST a product without name field",
                  "fullTitle": "Users API /POST products it should not POST a product without name field",
                  "timedOut": false,
                  "duration": 24,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const product = {\n    description: \"This is a product\",\n    price: 50,\n    category: \"Electronics\",\n    role: 'superadmin'\n};\nchai\n    .request(app)\n    .post('/api/v1/products/')\n    .send(product)\n    .end((err, res) => {\n        res.should.have.status(400);\n        res.body.should.be.a(\"object\");\n        res.body.should.have.property(\"status\").eql(\"Error\");\n        // res.body.should.have.property(\"message\").eql(\"Name Missing\");\n        done();\n    });",
                  "err": {},
                  "uuid": "30901df4-7fae-4d1f-b2d7-eb4b5d692ed6",
                  "parentUUID": "94627bda-111c-48b6-9c7b-4373cd5dbd5e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should POST a product",
                  "fullTitle": "Users API /POST products it should POST a product",
                  "timedOut": false,
                  "duration": 316,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const product = {\n    name: \"Test Product\",\n    description: \"This is a test product\",\n    price: 50,\n    category: \"Extra\",\n    role: 'superadmin'\n};\nchai\n    .request(app)\n    .post(\"/api/v1/products/\")\n    .send(product)\n    .end((err, res) => {\n        res.should.have.status(201);\n        res.body.should.be.a(\"object\");\n        res.body.should.have.property(\"status\").eql(\"success\");\n        res.body.should.have.property(\"data\");\n        res.body.data.should.have.property(\"product\");\n        res.body.data.product.should.have.property(\"name\").eql(\"Test Product\");\n        productId = res.body.data.product._id;\n        done();\n    });",
                  "err": {},
                  "uuid": "ed553795-7e10-4477-b1e0-6518b86eaa8c",
                  "parentUUID": "94627bda-111c-48b6-9c7b-4373cd5dbd5e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "30901df4-7fae-4d1f-b2d7-eb4b5d692ed6",
                "ed553795-7e10-4477-b1e0-6518b86eaa8c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 340,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "fd8d5730-868a-4a34-b6fc-71035736f974",
              "title": "/GET/:id product",
              "fullFile": "/media/aditya/Personal Files/Newton/node_ecommerce-app/node_ecommerce-app/__tests__/test.js",
              "file": "/__tests__/test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should GET a product by the given id",
                  "fullTitle": "Users API /GET/:id product it should GET a product by the given id",
                  "timedOut": false,
                  "duration": 297,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n    .request(app)\n    .get(`/api/v1/products/${productId}`)\n    .send({ role: 'admin' })\n    .end((err, res) => {\n        res.should.have.status(200);\n        res.body.should.be.a(\"object\");\n        res.body.should.have.property(\"status\").eql(\"success\");\n        res.body.should.have.property(\"data\");\n        res.body.data.should.have.property(\"product\");\n        res.body.data.product.should.have.property(\"_id\").eql(productId);\n        done();\n    });",
                  "err": {},
                  "uuid": "e0ce8f42-61b1-46f1-bb1b-e795b29954d8",
                  "parentUUID": "fd8d5730-868a-4a34-b6fc-71035736f974",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should not GET a product with invalid id",
                  "fullTitle": "Users API /GET/:id product it should not GET a product with invalid id",
                  "timedOut": false,
                  "duration": 28,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n    .request(app)\n    .get(`/api/v1/products/invalid-id`)\n    .send({ role: 'admin' })\n    .end((err, res) => {\n        res.should.have.status(400);\n        res.body.should.be.a(\"object\");\n        res.body.should.have.property(\"status\").eql(\"Error\");\n        res.body.should.have.property(\"message\").eql(\"Product Fetching Failed\");\n        done();\n    });",
                  "err": {},
                  "uuid": "aefe32c6-e50f-4f1e-a38b-496625bb0b1d",
                  "parentUUID": "fd8d5730-868a-4a34-b6fc-71035736f974",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should return 404 when product not found",
                  "fullTitle": "Users API /GET/:id product it should return 404 when product not found",
                  "timedOut": false,
                  "duration": 276,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n    .request(app)\n    .get(`/api/v1/products/${productId_wrong}`)\n    .send({ role: 'admin' })\n    .end((err, res) => {\n        res.should.have.status(404);\n        res.body.should.be.a(\"object\");\n        res.body.should.have.property(\"status\").eql(\"Error\");\n        res.body.should.have.property(\"message\").eql(\"Product Not Found\");\n        done();\n    });",
                  "err": {},
                  "uuid": "e93fd631-c192-4db7-b688-1d3bd4bf93d8",
                  "parentUUID": "fd8d5730-868a-4a34-b6fc-71035736f974",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e0ce8f42-61b1-46f1-bb1b-e795b29954d8",
                "aefe32c6-e50f-4f1e-a38b-496625bb0b1d",
                "e93fd631-c192-4db7-b688-1d3bd4bf93d8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 601,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "08417054-da25-4951-8e76-5a08e7972e66",
              "title": "/PUT/:id product",
              "fullFile": "/media/aditya/Personal Files/Newton/node_ecommerce-app/node_ecommerce-app/__tests__/test.js",
              "file": "/__tests__/test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should not update a product with invalid ID",
                  "fullTitle": "Users API /PUT/:id product it should not update a product with invalid ID",
                  "timedOut": false,
                  "duration": 18,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const product = {\n    updatedData: {\n        name: 'Updated Test Product',\n        description: 'This is an updated test product',\n        price: 2499,\n        category: 'Updated Test Category',\n    },\n    role: 'admin'\n};\nchai.request(app)\n    .patch('/api/v1/products/invalid-id')\n    .send(product)\n    .end((err, res) => {\n        res.should.have.status(400);\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').eql('Error');\n        res.body.should.have.property('message').eql('Product Updation Failed');\n        done();\n    });",
                  "err": {},
                  "uuid": "5a096ab6-2e70-4ec6-9d59-99157276f8d3",
                  "parentUUID": "08417054-da25-4951-8e76-5a08e7972e66",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should update a product",
                  "fullTitle": "Users API /PUT/:id product it should update a product",
                  "timedOut": false,
                  "duration": 543,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const product = {\n    updatedData: {\n        name: 'Updated Test Product',\n        description: 'This is an updated test product',\n        price: 2499,\n        category: 'Updated Test Category'\n    },\n    role: 'admin'\n};\nchai.request(app)\n    .patch(`/api/v1/products/${productId}`)\n    .send(product)\n    .end((err, res) => {\n        // console.log(res.body);\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').eql('success');\n        res.body.should.have.property('message').eql('Product Updated Successfully');\n        res.body.should.have.property('data');\n        res.body.data.should.have.property('updatedProduct');\n        res.body.data.updatedProduct.should.have.property('name').eql('Updated Test Product');\n        done();\n    });",
                  "err": {},
                  "uuid": "17825909-b71b-481f-9257-b12d4c2ff86c",
                  "parentUUID": "08417054-da25-4951-8e76-5a08e7972e66",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5a096ab6-2e70-4ec6-9d59-99157276f8d3",
                "17825909-b71b-481f-9257-b12d4c2ff86c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 561,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            },
            {
              "uuid": "f92118cb-a026-466e-a8f0-d41fd135ede3",
              "title": "/DELETE/:id product",
              "fullFile": "/media/aditya/Personal Files/Newton/node_ecommerce-app/node_ecommerce-app/__tests__/test.js",
              "file": "/__tests__/test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should not delete a product with invalid ID",
                  "fullTitle": "Users API /DELETE/:id product it should not delete a product with invalid ID",
                  "timedOut": false,
                  "duration": 266,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(app)\n    .delete(`/api/v1/products/${productId_wrong}`)\n    .send({ role: 'admin' })\n    .end((err, res) => {\n        res.should.have.status(404);\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').eql('Error');\n        // res.body.should.have.property('message').eql('Product Updation Failed');\n        done();\n    });",
                  "err": {},
                  "uuid": "baacacdc-f0dd-4968-941d-023a2cf890e6",
                  "parentUUID": "f92118cb-a026-466e-a8f0-d41fd135ede3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should delete a product",
                  "fullTitle": "Users API /DELETE/:id product it should delete a product",
                  "timedOut": false,
                  "duration": 275,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.request(app)\n    .delete(`/api/v1/products/${productId}`)\n    .send({ role: 'admin' })\n    .end((err, res) => {\n        // console.log(err);\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').eql('success');\n        res.body.should.have.property('data').eql(null);\n        // let delProd = Product.findById(productId);\n        // delProd.should.eql(null);\n        done();\n    });",
                  "err": {},
                  "uuid": "85105adc-8c91-487c-ad6f-bfe59b91a595",
                  "parentUUID": "f92118cb-a026-466e-a8f0-d41fd135ede3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "baacacdc-f0dd-4968-941d-023a2cf890e6",
                "85105adc-8c91-487c-ad6f-bfe59b91a595"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 541,
              "root": false,
              "rootEmpty": false,
              "_timeout": 100000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 100000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}